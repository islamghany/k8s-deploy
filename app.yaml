#... Namespace YAML definition
# A Namespace resource is a way to segregate and organize resources in a cluster
---
apiVersion: v1
kind: Namespace
metadata:
  name: k8s-deploy # the name of the namespace

# ... Deployment YAML definition
# A Deployment resource is used to define the desired state of the pods
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app
  namespace: k8s-deploy # the namespace in which the deployment should be created
spec: # specification of the deployment
  replicas: 1
  selector:
    matchLabels: # selects those pods, it has always to be the same as the labels of the pod, it used by deployment to manage the pods.
      name: app
  template:
    metadata:
      labels: # Pod label, that wraps the container (app)
        name: app
    spec:
      containers:
        - name: app # container name
          image: k8s-deploy # image name in minikube (docker)
          ports:
            - containerPort: 80 # the port that the container listens on
          imagePullPolicy: IfNotPresent # pull the image from the local registry, if it's not present there get it from the internet

# ... Service YAML definition
# A Service resource makes pods available to other pods or users inside and outside of the cluster
# A Service also ensures continuous availability of the pods
---
apiVersion: v1
kind: Service
metadata:
  name: app
  namespace: k8s-deploy # the namespace in which the service should be created
spec:
  selector:
    name: app # all pods with the label (app: app) will be selected and exposed by the service
  ports:
    - port: 8080 # the service listens on this port and forwards to the targetPort
      targetPort: 80 # the port that the service forwards to, should be the same as the containerPort of the pod

# ... Ingress YAML definition1
# An Ingress resource  that exposes the pods to the public internet
# The Ingress retrieves the right Service by name and port and routes the traffic to it
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: app
  namespace: k8s-deploy # the namespace in which the ingress should be created
  annotations: # annotations are arbitrary key-value pairs that can be used to configure the Ingress controller
    nginx.ingress.kubernetes.io/rewrite-target: / # rewrite the URL to /, so that the request is forwarded to the root path
spec:
  rules: # is a collection of rules on how to route the traffic to the services
    - http:
        paths:
          - path: /app # the path that the request should match
            pathType: Prefix # the type of the path
            backend:
              service: # must be a service in the same namespace as the ingress
                name: app # the name of the service that the request should be forwarded to
                port:
                  number: 8080 # the port of the service that the request should be forwarded to
